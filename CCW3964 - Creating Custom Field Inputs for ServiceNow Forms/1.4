// Create application definition
angular.module('assignedTo', ['sn.glideAjax']);
angular.module('assignedTo').controller('AssignedToCtrl', function($scope, GlideAjax) {
	// Stores the list of user in the assignment group
	$scope.assignedTo = [];
	// On load gets the list of users for the current assignment group
	getAssignedTo();
	// Defines get function which executes when a user is clicked on
	$scope.get = function(group) {
		getAssignedTo()
	};
	
	//Keeps track of the currently selected user
	$scope.selected = g_form.getValue('assigned_to');
	
	// Function to perform the assigned to selection
	$scope.selectAssignedTo = function(sys_id,index){
		$scope.selected = sys_id;
		g_form.setValue('assigned_to',sys_id);
	};
	/** Returns the list of users that belong to a specific group **/
	function getAssignedTo() {
		var ga = new GlideAjax('AngularGroupMembers');
		ga.addParam('sysparm_name', 'get');
		ga.addParam('group', g_form.getValue("assignment_group"));
		ga.getJSON(function(response) {
			if (!response)
				return;
			$scope.assignedTo = response;
		});
	}
});



Create glideAjax connector for Angular

angular.module('sn.glideAjax', []);
angular.module('sn.glideAjax').service('GlideAjax', function($rootScope) {
	var glideAjax = window.GlideAjax;
	glideAjax.prototype.getJSON = function(callback) {
		this.getXMLAnswer(function(answer) {
			var answerJSON = JSON.parse(answer);
			callback(answerJSON);
			$rootScope.$apply();
			});
	};
 
	return glideAjax;
});


Create Angular Framework UI Script

document.writeln('<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.3.14/angular.js"></script>');

Create AngularGroupMembers Script Include

var AngularGroupMembers = Class.create();
AngularGroupMembers.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {
	get: function() {
		var group = this.getParameter('group');
		var list = [];
		if(group !=''){
			var assignedTos = new GlideRecord('sys_user_grmember');
			assignedTos.addQuery('group',group);
			assignedTos.query();
			while (assignedTos.next()) {
				list.push({first: assignedTos.user.first_name+'',last:assignedTos.user.last_name+'',id:assignedTos.user.sys_id+''});
			}	
		}
		return new global.JSON().encodeArray(list);
	},
	type: 'AngularGroupMembers'
});



Create angular_assigned_to UI Macro


<?xml version="1.0" encoding="utf-8" ?>
<j:jelly trim="false" xmlns:j="jelly:core" xmlns:g="glide" xmlns:j2="null" xmlns:g2="null">
<script language="javascript" src="Angular_1_3_framework.jsdbx" />
	<script src="angular_assigned_to.jsdbx?v=${gs.nowDateTime()}"></script>
	<script language="javascript" src="service.sn-glideAjax.jsdbx" />
	<style>
	.assignedTo{
    display: inline-block;
    cursor: pointer;
    margin: 0 5px;
    background: lightblue;
    border-radius: 5px;
	padding:5px;
	text-align:center;
	font-weight:bold;
	opacity:.5;
	}
	.assignedTo:hover,.assignedTo.selected{
	opacity:1;
	}
	</style>
	<div sn-ng-formatter="assignedTo">
   <div id="AssignedToCtrl" ng-controller="AssignedToCtrl">
	   <div class="assignedTo" ng-repeat="assignedToItem in assignedTo" ng-click="selectAssignedTo(assignedToItem.id,$index)" ng-class="{selected: assignedToItem.id == selected}" >
	<div>{{assignedToItem.first}} </div>
	<div>{{assignedToItem.last}}</div>
</div>
		</div>
	</div>
</j:jelly>



